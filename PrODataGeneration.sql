USE 2010s_Retrosheet;

DROP TABLE IF EXISTS ProductiveOutData;
CREATE TABLE ProductiveOutData AS
SELECT BAT_ID, START_BASES_CD, END_BASES_CD, RBI_CT, EVENT_CD FROM events 
WHERE START_BASES_CD != 0 AND START_BASES_CD != 1 AND START_BASES_CD
AND OUTS_CT < 2
AND (EVENT_CD = 2 OR EVENT_CD = 3 OR EVENT_CD = 19);

DROP TABLE IF EXISTS RBIData;
CREATE TABLE RBIData AS
SELECT BAT_ID, SUM(CASE RBI_CT > 0 WHEN TRUE THEN 1 ELSE 0 END) AS RBI FROM ProductiveOutData
GROUP BY BAT_ID
ORDER BY RBI DESC;

DROP TABLE IF EXISTS KData;
CREATE TABLE KData AS
SELECT BAT_ID, SUM(CASE EVENT_CD = 3 WHEN TRUE THEN 1 ELSE 0 END) AS SO,
COUNT(EVENT_CD) AS AB FROM events
GROUP BY BAT_ID
ORDER BY SO DESC;

#DROP TABLE IF EXISTS TeamData;
#CREATE TABLE TeamData AS
#SELECT e.BAT_TEAM_ID, SUM(CASE e.RBI_CT > 0 WHEN TRUE THEN e.RBI_CT ELSE 0 END) AS Runs,
#COUNT(p.START_BASES_CD) AS PrO,
#SUM(CASE p.START_BASES_CD < p.END_BASES_CD WHEN TRUE THEN 1 ELSE 0 END) AS PrOO FROM events e
#LEFT JOIN ProductiveOutData p ON p.BAT_TEAM_ID = e.BAT_TEAM_ID
#GROUP BY BAT_TEAM_ID
#ORDER BY Runs DESC;

SELECT * FROM RBIData;

SELECT * FROM KData;

SELECT DISTINCT r.LAST_NAME_TX, r.FIRST_NAME_TX, COUNT(p.START_BASES_CD) AS PrOO,
SUM(CASE p.START_BASES_CD < p.END_BASES_CD WHEN TRUE THEN 1 ELSE 0 END) AS PrO, 
SUM(CASE p.EVENT_CD = 3 WHEN TRUE THEN 1 ELSE 0 END) AS PrOK, rbi.RBI AS RBI,
k.SO AS SO, k.AB AS TOT_AB
FROM ProductiveOutData p
LEFT JOIN rosters r ON p.BAT_ID = r.PLAYER_ID 
LEFT JOIN RBIData rbi ON rbi.BAT_ID = p.BAT_ID
LEFT JOIN KData k ON k.BAT_ID = p.BAT_ID
GROUP BY r.LAST_NAME_TX, r.FIRST_NAME_TX, RBI, SO, TOT_AB
ORDER BY PrOO DESC;